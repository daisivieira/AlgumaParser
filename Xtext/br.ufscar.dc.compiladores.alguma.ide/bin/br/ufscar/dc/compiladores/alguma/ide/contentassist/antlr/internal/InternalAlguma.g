/*
 * generated by Xtext 2.27.0.M2
 */
grammar InternalAlguma;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package br.ufscar.dc.compiladores.alguma.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.ufscar.dc.compiladores.alguma.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import br.ufscar.dc.compiladores.alguma.services.AlgumaGrammarAccess;

}
@parser::members {
	private AlgumaGrammarAccess grammarAccess;

	public void setGrammarAccess(AlgumaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePrograma
entryRulePrograma
:
{ before(grammarAccess.getProgramaRule()); }
	 rulePrograma
{ after(grammarAccess.getProgramaRule()); } 
	 EOF 
;

// Rule Programa
rulePrograma 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramaAccess().getGroup()); }
		(rule__Programa__Group__0)
		{ after(grammarAccess.getProgramaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaracao
entryRuleDeclaracao
:
{ before(grammarAccess.getDeclaracaoRule()); }
	 ruleDeclaracao
{ after(grammarAccess.getDeclaracaoRule()); } 
	 EOF 
;

// Rule Declaracao
ruleDeclaracao 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaracaoAccess().getGroup()); }
		(rule__Declaracao__Group__0)
		{ after(grammarAccess.getDeclaracaoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressaoAritmetica
entryRuleExpressaoAritmetica
:
{ before(grammarAccess.getExpressaoAritmeticaRule()); }
	 ruleExpressaoAritmetica
{ after(grammarAccess.getExpressaoAritmeticaRule()); } 
	 EOF 
;

// Rule ExpressaoAritmetica
ruleExpressaoAritmetica 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressaoAritmeticaAccess().getGroup()); }
		(rule__ExpressaoAritmetica__Group__0)
		{ after(grammarAccess.getExpressaoAritmeticaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutroTermoAritmetico
entryRuleOutroTermoAritmetico
:
{ before(grammarAccess.getOutroTermoAritmeticoRule()); }
	 ruleOutroTermoAritmetico
{ after(grammarAccess.getOutroTermoAritmeticoRule()); } 
	 EOF 
;

// Rule OutroTermoAritmetico
ruleOutroTermoAritmetico 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutroTermoAritmeticoAccess().getGroup()); }
		(rule__OutroTermoAritmetico__Group__0)
		{ after(grammarAccess.getOutroTermoAritmeticoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTermoAritmetico
entryRuleTermoAritmetico
:
{ before(grammarAccess.getTermoAritmeticoRule()); }
	 ruleTermoAritmetico
{ after(grammarAccess.getTermoAritmeticoRule()); } 
	 EOF 
;

// Rule TermoAritmetico
ruleTermoAritmetico 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermoAritmeticoAccess().getGroup()); }
		(rule__TermoAritmetico__Group__0)
		{ after(grammarAccess.getTermoAritmeticoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutroFatorAritmetico
entryRuleOutroFatorAritmetico
:
{ before(grammarAccess.getOutroFatorAritmeticoRule()); }
	 ruleOutroFatorAritmetico
{ after(grammarAccess.getOutroFatorAritmeticoRule()); } 
	 EOF 
;

// Rule OutroFatorAritmetico
ruleOutroFatorAritmetico 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutroFatorAritmeticoAccess().getGroup()); }
		(rule__OutroFatorAritmetico__Group__0)
		{ after(grammarAccess.getOutroFatorAritmeticoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFatorAritmetico
entryRuleFatorAritmetico
:
{ before(grammarAccess.getFatorAritmeticoRule()); }
	 ruleFatorAritmetico
{ after(grammarAccess.getFatorAritmeticoRule()); } 
	 EOF 
;

// Rule FatorAritmetico
ruleFatorAritmetico 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFatorAritmeticoAccess().getAlternatives()); }
		(rule__FatorAritmetico__Alternatives)
		{ after(grammarAccess.getFatorAritmeticoAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFatorNumero
entryRuleFatorNumero
:
{ before(grammarAccess.getFatorNumeroRule()); }
	 ruleFatorNumero
{ after(grammarAccess.getFatorNumeroRule()); } 
	 EOF 
;

// Rule FatorNumero
ruleFatorNumero 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFatorNumeroAccess().getNumeroAssignment()); }
		(rule__FatorNumero__NumeroAssignment)
		{ after(grammarAccess.getFatorNumeroAccess().getNumeroAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFatorVariavel
entryRuleFatorVariavel
:
{ before(grammarAccess.getFatorVariavelRule()); }
	 ruleFatorVariavel
{ after(grammarAccess.getFatorVariavelRule()); } 
	 EOF 
;

// Rule FatorVariavel
ruleFatorVariavel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFatorVariavelAccess().getVariavelAssignment()); }
		(rule__FatorVariavel__VariavelAssignment)
		{ after(grammarAccess.getFatorVariavelAccess().getVariavelAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFatorSubExpressao
entryRuleFatorSubExpressao
:
{ before(grammarAccess.getFatorSubExpressaoRule()); }
	 ruleFatorSubExpressao
{ after(grammarAccess.getFatorSubExpressaoRule()); } 
	 EOF 
;

// Rule FatorSubExpressao
ruleFatorSubExpressao 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFatorSubExpressaoAccess().getGroup()); }
		(rule__FatorSubExpressao__Group__0)
		{ after(grammarAccess.getFatorSubExpressaoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressaoRelacional
entryRuleExpressaoRelacional
:
{ before(grammarAccess.getExpressaoRelacionalRule()); }
	 ruleExpressaoRelacional
{ after(grammarAccess.getExpressaoRelacionalRule()); } 
	 EOF 
;

// Rule ExpressaoRelacional
ruleExpressaoRelacional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressaoRelacionalAccess().getGroup()); }
		(rule__ExpressaoRelacional__Group__0)
		{ after(grammarAccess.getExpressaoRelacionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutroTermoRelacional
entryRuleOutroTermoRelacional
:
{ before(grammarAccess.getOutroTermoRelacionalRule()); }
	 ruleOutroTermoRelacional
{ after(grammarAccess.getOutroTermoRelacionalRule()); } 
	 EOF 
;

// Rule OutroTermoRelacional
ruleOutroTermoRelacional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutroTermoRelacionalAccess().getGroup()); }
		(rule__OutroTermoRelacional__Group__0)
		{ after(grammarAccess.getOutroTermoRelacionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTermoRelacional
entryRuleTermoRelacional
:
{ before(grammarAccess.getTermoRelacionalRule()); }
	 ruleTermoRelacional
{ after(grammarAccess.getTermoRelacionalRule()); } 
	 EOF 
;

// Rule TermoRelacional
ruleTermoRelacional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermoRelacionalAccess().getAlternatives()); }
		(rule__TermoRelacional__Alternatives)
		{ after(grammarAccess.getTermoRelacionalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTermoComparacaoRelacional
entryRuleTermoComparacaoRelacional
:
{ before(grammarAccess.getTermoComparacaoRelacionalRule()); }
	 ruleTermoComparacaoRelacional
{ after(grammarAccess.getTermoComparacaoRelacionalRule()); } 
	 EOF 
;

// Rule TermoComparacaoRelacional
ruleTermoComparacaoRelacional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermoComparacaoRelacionalAccess().getGroup()); }
		(rule__TermoComparacaoRelacional__Group__0)
		{ after(grammarAccess.getTermoComparacaoRelacionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTermoSubExpressaoRelacional
entryRuleTermoSubExpressaoRelacional
:
{ before(grammarAccess.getTermoSubExpressaoRelacionalRule()); }
	 ruleTermoSubExpressaoRelacional
{ after(grammarAccess.getTermoSubExpressaoRelacionalRule()); } 
	 EOF 
;

// Rule TermoSubExpressaoRelacional
ruleTermoSubExpressaoRelacional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermoSubExpressaoRelacionalAccess().getGroup()); }
		(rule__TermoSubExpressaoRelacional__Group__0)
		{ after(grammarAccess.getTermoSubExpressaoRelacionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComando
entryRuleComando
:
{ before(grammarAccess.getComandoRule()); }
	 ruleComando
{ after(grammarAccess.getComandoRule()); } 
	 EOF 
;

// Rule Comando
ruleComando 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComandoAccess().getAlternatives()); }
		(rule__Comando__Alternatives)
		{ after(grammarAccess.getComandoAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComandoAtribuicao
entryRuleComandoAtribuicao
:
{ before(grammarAccess.getComandoAtribuicaoRule()); }
	 ruleComandoAtribuicao
{ after(grammarAccess.getComandoAtribuicaoRule()); } 
	 EOF 
;

// Rule ComandoAtribuicao
ruleComandoAtribuicao 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComandoAtribuicaoAccess().getGroup()); }
		(rule__ComandoAtribuicao__Group__0)
		{ after(grammarAccess.getComandoAtribuicaoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComandoEntrada
entryRuleComandoEntrada
:
{ before(grammarAccess.getComandoEntradaRule()); }
	 ruleComandoEntrada
{ after(grammarAccess.getComandoEntradaRule()); } 
	 EOF 
;

// Rule ComandoEntrada
ruleComandoEntrada 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComandoEntradaAccess().getGroup()); }
		(rule__ComandoEntrada__Group__0)
		{ after(grammarAccess.getComandoEntradaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComandoSaida
entryRuleComandoSaida
:
{ before(grammarAccess.getComandoSaidaRule()); }
	 ruleComandoSaida
{ after(grammarAccess.getComandoSaidaRule()); } 
	 EOF 
;

// Rule ComandoSaida
ruleComandoSaida 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComandoSaidaAccess().getGroup()); }
		(rule__ComandoSaida__Group__0)
		{ after(grammarAccess.getComandoSaidaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComandoCondicao
entryRuleComandoCondicao
:
{ before(grammarAccess.getComandoCondicaoRule()); }
	 ruleComandoCondicao
{ after(grammarAccess.getComandoCondicaoRule()); } 
	 EOF 
;

// Rule ComandoCondicao
ruleComandoCondicao 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComandoCondicaoAccess().getGroup()); }
		(rule__ComandoCondicao__Group__0)
		{ after(grammarAccess.getComandoCondicaoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComandoRepeticao
entryRuleComandoRepeticao
:
{ before(grammarAccess.getComandoRepeticaoRule()); }
	 ruleComandoRepeticao
{ after(grammarAccess.getComandoRepeticaoRule()); } 
	 EOF 
;

// Rule ComandoRepeticao
ruleComandoRepeticao 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComandoRepeticaoAccess().getGroup()); }
		(rule__ComandoRepeticao__Group__0)
		{ after(grammarAccess.getComandoRepeticaoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubAlgoritmo
entryRuleSubAlgoritmo
:
{ before(grammarAccess.getSubAlgoritmoRule()); }
	 ruleSubAlgoritmo
{ after(grammarAccess.getSubAlgoritmoRule()); } 
	 EOF 
;

// Rule SubAlgoritmo
ruleSubAlgoritmo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubAlgoritmoAccess().getGroup()); }
		(rule__SubAlgoritmo__Group__0)
		{ after(grammarAccess.getSubAlgoritmoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTipoVar
entryRuleTipoVar
:
{ before(grammarAccess.getTipoVarRule()); }
	 ruleTipoVar
{ after(grammarAccess.getTipoVarRule()); } 
	 EOF 
;

// Rule TipoVar
ruleTipoVar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTipoVarAccess().getAlternatives()); }
		(rule__TipoVar__Alternatives)
		{ after(grammarAccess.getTipoVarAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpArit1
entryRuleOpArit1
:
{ before(grammarAccess.getOpArit1Rule()); }
	 ruleOpArit1
{ after(grammarAccess.getOpArit1Rule()); } 
	 EOF 
;

// Rule OpArit1
ruleOpArit1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpArit1Access().getAlternatives()); }
		(rule__OpArit1__Alternatives)
		{ after(grammarAccess.getOpArit1Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpArit2
entryRuleOpArit2
:
{ before(grammarAccess.getOpArit2Rule()); }
	 ruleOpArit2
{ after(grammarAccess.getOpArit2Rule()); } 
	 EOF 
;

// Rule OpArit2
ruleOpArit2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpArit2Access().getAlternatives()); }
		(rule__OpArit2__Alternatives)
		{ after(grammarAccess.getOpArit2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpRel
entryRuleOpRel
:
{ before(grammarAccess.getOpRelRule()); }
	 ruleOpRel
{ after(grammarAccess.getOpRelRule()); } 
	 EOF 
;

// Rule OpRel
ruleOpRel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpRelAccess().getAlternatives()); }
		(rule__OpRel__Alternatives)
		{ after(grammarAccess.getOpRelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpBool
entryRuleOpBool
:
{ before(grammarAccess.getOpBoolRule()); }
	 ruleOpBool
{ after(grammarAccess.getOpBoolRule()); } 
	 EOF 
;

// Rule OpBool
ruleOpBool 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpBoolAccess().getAlternatives()); }
		(rule__OpBool__Alternatives)
		{ after(grammarAccess.getOpBoolAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FatorAritmetico__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFatorAritmeticoAccess().getFatorNumeroParserRuleCall_0()); }
		ruleFatorNumero
		{ after(grammarAccess.getFatorAritmeticoAccess().getFatorNumeroParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFatorAritmeticoAccess().getFatorVariavelParserRuleCall_1()); }
		ruleFatorVariavel
		{ after(grammarAccess.getFatorAritmeticoAccess().getFatorVariavelParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFatorAritmeticoAccess().getFatorSubExpressaoParserRuleCall_2()); }
		ruleFatorSubExpressao
		{ after(grammarAccess.getFatorAritmeticoAccess().getFatorSubExpressaoParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoRelacional__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermoRelacionalAccess().getTermoComparacaoRelacionalParserRuleCall_0()); }
		ruleTermoComparacaoRelacional
		{ after(grammarAccess.getTermoRelacionalAccess().getTermoComparacaoRelacionalParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermoRelacionalAccess().getTermoSubExpressaoRelacionalParserRuleCall_1()); }
		ruleTermoSubExpressaoRelacional
		{ after(grammarAccess.getTermoRelacionalAccess().getTermoSubExpressaoRelacionalParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comando__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoAccess().getComandoAtribuicaoParserRuleCall_0()); }
		ruleComandoAtribuicao
		{ after(grammarAccess.getComandoAccess().getComandoAtribuicaoParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComandoAccess().getComandoEntradaParserRuleCall_1()); }
		ruleComandoEntrada
		{ after(grammarAccess.getComandoAccess().getComandoEntradaParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getComandoAccess().getComandoSaidaParserRuleCall_2()); }
		ruleComandoSaida
		{ after(grammarAccess.getComandoAccess().getComandoSaidaParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getComandoAccess().getComandoCondicaoParserRuleCall_3()); }
		ruleComandoCondicao
		{ after(grammarAccess.getComandoAccess().getComandoCondicaoParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getComandoAccess().getComandoRepeticaoParserRuleCall_4()); }
		ruleComandoRepeticao
		{ after(grammarAccess.getComandoAccess().getComandoRepeticaoParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getComandoAccess().getSubAlgoritmoParserRuleCall_5()); }
		ruleSubAlgoritmo
		{ after(grammarAccess.getComandoAccess().getSubAlgoritmoParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TipoVar__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTipoVarAccess().getINTEIROKeyword_0()); }
		'INTEIRO'
		{ after(grammarAccess.getTipoVarAccess().getINTEIROKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTipoVarAccess().getREALKeyword_1()); }
		'REAL'
		{ after(grammarAccess.getTipoVarAccess().getREALKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpArit1__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpArit1Access().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getOpArit1Access().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpArit1Access().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getOpArit1Access().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpArit2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpArit2Access().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getOpArit2Access().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpArit2Access().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getOpArit2Access().getSolidusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpRel__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpRelAccess().getGreaterThanSignKeyword_0()); }
		'>'
		{ after(grammarAccess.getOpRelAccess().getGreaterThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpRelAccess().getGreaterThanSignEqualsSignKeyword_1()); }
		'>='
		{ after(grammarAccess.getOpRelAccess().getGreaterThanSignEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOpRelAccess().getLessThanSignKeyword_2()); }
		'<'
		{ after(grammarAccess.getOpRelAccess().getLessThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOpRelAccess().getLessThanSignEqualsSignKeyword_3()); }
		'<='
		{ after(grammarAccess.getOpRelAccess().getLessThanSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOpRelAccess().getLessThanSignGreaterThanSignKeyword_4()); }
		'<>'
		{ after(grammarAccess.getOpRelAccess().getLessThanSignGreaterThanSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOpRelAccess().getEqualsSignKeyword_5()); }
		'='
		{ after(grammarAccess.getOpRelAccess().getEqualsSignKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpBool__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpBoolAccess().getEKeyword_0()); }
		'E'
		{ after(grammarAccess.getOpBoolAccess().getEKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpBoolAccess().getOUKeyword_1()); }
		'OU'
		{ after(grammarAccess.getOpBoolAccess().getOUKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programa__Group__0__Impl
	rule__Programa__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramaAccess().getColonKeyword_0()); }
	':'
	{ after(grammarAccess.getProgramaAccess().getColonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programa__Group__1__Impl
	rule__Programa__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramaAccess().getDECLARACOESKeyword_1()); }
	'DECLARACOES'
	{ after(grammarAccess.getProgramaAccess().getDECLARACOESKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programa__Group__2__Impl
	rule__Programa__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProgramaAccess().getDeclaracoesAssignment_2()); }
		(rule__Programa__DeclaracoesAssignment_2)
		{ after(grammarAccess.getProgramaAccess().getDeclaracoesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getProgramaAccess().getDeclaracoesAssignment_2()); }
		(rule__Programa__DeclaracoesAssignment_2)*
		{ after(grammarAccess.getProgramaAccess().getDeclaracoesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programa__Group__3__Impl
	rule__Programa__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramaAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getProgramaAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programa__Group__4__Impl
	rule__Programa__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramaAccess().getALGORITMOKeyword_4()); }
	'ALGORITMO'
	{ after(grammarAccess.getProgramaAccess().getALGORITMOKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programa__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProgramaAccess().getComandosAssignment_5()); }
		(rule__Programa__ComandosAssignment_5)
		{ after(grammarAccess.getProgramaAccess().getComandosAssignment_5()); }
	)
	(
		{ before(grammarAccess.getProgramaAccess().getComandosAssignment_5()); }
		(rule__Programa__ComandosAssignment_5)*
		{ after(grammarAccess.getProgramaAccess().getComandosAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaracao__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaracao__Group__0__Impl
	rule__Declaracao__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaracaoAccess().getNameAssignment_0()); }
	(rule__Declaracao__NameAssignment_0)
	{ after(grammarAccess.getDeclaracaoAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaracao__Group__1__Impl
	rule__Declaracao__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaracaoAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getDeclaracaoAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaracao__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaracaoAccess().getTipoAssignment_2()); }
	(rule__Declaracao__TipoAssignment_2)
	{ after(grammarAccess.getDeclaracaoAccess().getTipoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressaoAritmetica__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressaoAritmetica__Group__0__Impl
	rule__ExpressaoAritmetica__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressaoAritmetica__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressaoAritmeticaAccess().getTermo1Assignment_0()); }
	(rule__ExpressaoAritmetica__Termo1Assignment_0)
	{ after(grammarAccess.getExpressaoAritmeticaAccess().getTermo1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressaoAritmetica__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressaoAritmetica__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressaoAritmetica__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressaoAritmeticaAccess().getOutrosTermosAssignment_1()); }
	(rule__ExpressaoAritmetica__OutrosTermosAssignment_1)*
	{ after(grammarAccess.getExpressaoAritmeticaAccess().getOutrosTermosAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutroTermoAritmetico__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutroTermoAritmetico__Group__0__Impl
	rule__OutroTermoAritmetico__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroTermoAritmetico__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutroTermoAritmeticoAccess().getOperadorAssignment_0()); }
	(rule__OutroTermoAritmetico__OperadorAssignment_0)
	{ after(grammarAccess.getOutroTermoAritmeticoAccess().getOperadorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroTermoAritmetico__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutroTermoAritmetico__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroTermoAritmetico__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutroTermoAritmeticoAccess().getTermoAssignment_1()); }
	(rule__OutroTermoAritmetico__TermoAssignment_1)
	{ after(grammarAccess.getOutroTermoAritmeticoAccess().getTermoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TermoAritmetico__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermoAritmetico__Group__0__Impl
	rule__TermoAritmetico__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoAritmetico__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermoAritmeticoAccess().getFator1Assignment_0()); }
	(rule__TermoAritmetico__Fator1Assignment_0)
	{ after(grammarAccess.getTermoAritmeticoAccess().getFator1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoAritmetico__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermoAritmetico__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoAritmetico__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermoAritmeticoAccess().getOutrosFatoresAssignment_1()); }
	(rule__TermoAritmetico__OutrosFatoresAssignment_1)*
	{ after(grammarAccess.getTermoAritmeticoAccess().getOutrosFatoresAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutroFatorAritmetico__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutroFatorAritmetico__Group__0__Impl
	rule__OutroFatorAritmetico__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroFatorAritmetico__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutroFatorAritmeticoAccess().getOperadorAssignment_0()); }
	(rule__OutroFatorAritmetico__OperadorAssignment_0)
	{ after(grammarAccess.getOutroFatorAritmeticoAccess().getOperadorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroFatorAritmetico__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutroFatorAritmetico__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroFatorAritmetico__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutroFatorAritmeticoAccess().getFatorAssignment_1()); }
	(rule__OutroFatorAritmetico__FatorAssignment_1)
	{ after(grammarAccess.getOutroFatorAritmeticoAccess().getFatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FatorSubExpressao__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FatorSubExpressao__Group__0__Impl
	rule__FatorSubExpressao__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FatorSubExpressao__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFatorSubExpressaoAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getFatorSubExpressaoAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FatorSubExpressao__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FatorSubExpressao__Group__1__Impl
	rule__FatorSubExpressao__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FatorSubExpressao__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFatorSubExpressaoAccess().getExpressaoAssignment_1()); }
	(rule__FatorSubExpressao__ExpressaoAssignment_1)
	{ after(grammarAccess.getFatorSubExpressaoAccess().getExpressaoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FatorSubExpressao__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FatorSubExpressao__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FatorSubExpressao__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFatorSubExpressaoAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getFatorSubExpressaoAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressaoRelacional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressaoRelacional__Group__0__Impl
	rule__ExpressaoRelacional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressaoRelacional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressaoRelacionalAccess().getTermo1Assignment_0()); }
	(rule__ExpressaoRelacional__Termo1Assignment_0)
	{ after(grammarAccess.getExpressaoRelacionalAccess().getTermo1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressaoRelacional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressaoRelacional__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressaoRelacional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressaoRelacionalAccess().getOutrosTermosAssignment_1()); }
	(rule__ExpressaoRelacional__OutrosTermosAssignment_1)*
	{ after(grammarAccess.getExpressaoRelacionalAccess().getOutrosTermosAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutroTermoRelacional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutroTermoRelacional__Group__0__Impl
	rule__OutroTermoRelacional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroTermoRelacional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutroTermoRelacionalAccess().getOperadorAssignment_0()); }
	(rule__OutroTermoRelacional__OperadorAssignment_0)
	{ after(grammarAccess.getOutroTermoRelacionalAccess().getOperadorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroTermoRelacional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutroTermoRelacional__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroTermoRelacional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutroTermoRelacionalAccess().getTermoAssignment_1()); }
	(rule__OutroTermoRelacional__TermoAssignment_1)
	{ after(grammarAccess.getOutroTermoRelacionalAccess().getTermoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TermoComparacaoRelacional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermoComparacaoRelacional__Group__0__Impl
	rule__TermoComparacaoRelacional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoComparacaoRelacional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermoComparacaoRelacionalAccess().getExp1Assignment_0()); }
	(rule__TermoComparacaoRelacional__Exp1Assignment_0)
	{ after(grammarAccess.getTermoComparacaoRelacionalAccess().getExp1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoComparacaoRelacional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermoComparacaoRelacional__Group__1__Impl
	rule__TermoComparacaoRelacional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoComparacaoRelacional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermoComparacaoRelacionalAccess().getOpRelAssignment_1()); }
	(rule__TermoComparacaoRelacional__OpRelAssignment_1)
	{ after(grammarAccess.getTermoComparacaoRelacionalAccess().getOpRelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoComparacaoRelacional__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermoComparacaoRelacional__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoComparacaoRelacional__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermoComparacaoRelacionalAccess().getExp2Assignment_2()); }
	(rule__TermoComparacaoRelacional__Exp2Assignment_2)
	{ after(grammarAccess.getTermoComparacaoRelacionalAccess().getExp2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TermoSubExpressaoRelacional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermoSubExpressaoRelacional__Group__0__Impl
	rule__TermoSubExpressaoRelacional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoSubExpressaoRelacional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermoSubExpressaoRelacionalAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getTermoSubExpressaoRelacionalAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoSubExpressaoRelacional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermoSubExpressaoRelacional__Group__1__Impl
	rule__TermoSubExpressaoRelacional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoSubExpressaoRelacional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermoSubExpressaoRelacionalAccess().getExpRelAssignment_1()); }
	(rule__TermoSubExpressaoRelacional__ExpRelAssignment_1)
	{ after(grammarAccess.getTermoSubExpressaoRelacionalAccess().getExpRelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoSubExpressaoRelacional__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermoSubExpressaoRelacional__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoSubExpressaoRelacional__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermoSubExpressaoRelacionalAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getTermoSubExpressaoRelacionalAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComandoAtribuicao__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoAtribuicao__Group__0__Impl
	rule__ComandoAtribuicao__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoAtribuicao__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoAtribuicaoAccess().getATRIBUIRKeyword_0()); }
	'ATRIBUIR'
	{ after(grammarAccess.getComandoAtribuicaoAccess().getATRIBUIRKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoAtribuicao__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoAtribuicao__Group__1__Impl
	rule__ComandoAtribuicao__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoAtribuicao__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoAtribuicaoAccess().getExpAssignment_1()); }
	(rule__ComandoAtribuicao__ExpAssignment_1)
	{ after(grammarAccess.getComandoAtribuicaoAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoAtribuicao__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoAtribuicao__Group__2__Impl
	rule__ComandoAtribuicao__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoAtribuicao__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoAtribuicaoAccess().getAKeyword_2()); }
	'A'
	{ after(grammarAccess.getComandoAtribuicaoAccess().getAKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoAtribuicao__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoAtribuicao__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoAtribuicao__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoAtribuicaoAccess().getVariavelAssignment_3()); }
	(rule__ComandoAtribuicao__VariavelAssignment_3)
	{ after(grammarAccess.getComandoAtribuicaoAccess().getVariavelAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComandoEntrada__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoEntrada__Group__0__Impl
	rule__ComandoEntrada__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoEntrada__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoEntradaAccess().getLERKeyword_0()); }
	'LER'
	{ after(grammarAccess.getComandoEntradaAccess().getLERKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoEntrada__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoEntrada__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoEntrada__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoEntradaAccess().getVariavelAssignment_1()); }
	(rule__ComandoEntrada__VariavelAssignment_1)
	{ after(grammarAccess.getComandoEntradaAccess().getVariavelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComandoSaida__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoSaida__Group__0__Impl
	rule__ComandoSaida__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSaida__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoSaidaAccess().getIMPRIMIRKeyword_0()); }
	'IMPRIMIR'
	{ after(grammarAccess.getComandoSaidaAccess().getIMPRIMIRKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSaida__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoSaida__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSaida__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoSaidaAccess().getVariavelAssignment_1()); }
	(rule__ComandoSaida__VariavelAssignment_1)
	{ after(grammarAccess.getComandoSaidaAccess().getVariavelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComandoCondicao__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoCondicao__Group__0__Impl
	rule__ComandoCondicao__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoCondicaoAccess().getSEKeyword_0()); }
	'SE'
	{ after(grammarAccess.getComandoCondicaoAccess().getSEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoCondicao__Group__1__Impl
	rule__ComandoCondicao__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoCondicaoAccess().getExpAssignment_1()); }
	(rule__ComandoCondicao__ExpAssignment_1)
	{ after(grammarAccess.getComandoCondicaoAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoCondicao__Group__2__Impl
	rule__ComandoCondicao__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoCondicaoAccess().getENTAOKeyword_2()); }
	'ENTAO'
	{ after(grammarAccess.getComandoCondicaoAccess().getENTAOKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoCondicao__Group__3__Impl
	rule__ComandoCondicao__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoCondicaoAccess().getCmd1Assignment_3()); }
	(rule__ComandoCondicao__Cmd1Assignment_3)
	{ after(grammarAccess.getComandoCondicaoAccess().getCmd1Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoCondicao__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoCondicaoAccess().getGroup_4()); }
	(rule__ComandoCondicao__Group_4__0)?
	{ after(grammarAccess.getComandoCondicaoAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComandoCondicao__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoCondicao__Group_4__0__Impl
	rule__ComandoCondicao__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoCondicaoAccess().getSENAOKeyword_4_0()); }
	'SENAO'
	{ after(grammarAccess.getComandoCondicaoAccess().getSENAOKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoCondicao__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoCondicaoAccess().getCmd2Assignment_4_1()); }
	(rule__ComandoCondicao__Cmd2Assignment_4_1)
	{ after(grammarAccess.getComandoCondicaoAccess().getCmd2Assignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComandoRepeticao__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoRepeticao__Group__0__Impl
	rule__ComandoRepeticao__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoRepeticao__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoRepeticaoAccess().getENQUANTOKeyword_0()); }
	'ENQUANTO'
	{ after(grammarAccess.getComandoRepeticaoAccess().getENQUANTOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoRepeticao__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoRepeticao__Group__1__Impl
	rule__ComandoRepeticao__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoRepeticao__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoRepeticaoAccess().getExpAssignment_1()); }
	(rule__ComandoRepeticao__ExpAssignment_1)
	{ after(grammarAccess.getComandoRepeticaoAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoRepeticao__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComandoRepeticao__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoRepeticao__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComandoRepeticaoAccess().getCmdAssignment_2()); }
	(rule__ComandoRepeticao__CmdAssignment_2)
	{ after(grammarAccess.getComandoRepeticaoAccess().getCmdAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubAlgoritmo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubAlgoritmo__Group__0__Impl
	rule__SubAlgoritmo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAlgoritmo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAlgoritmoAccess().getINICIOKeyword_0()); }
	'INICIO'
	{ after(grammarAccess.getSubAlgoritmoAccess().getINICIOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAlgoritmo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubAlgoritmo__Group__1__Impl
	rule__SubAlgoritmo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAlgoritmo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSubAlgoritmoAccess().getComandosAssignment_1()); }
		(rule__SubAlgoritmo__ComandosAssignment_1)
		{ after(grammarAccess.getSubAlgoritmoAccess().getComandosAssignment_1()); }
	)
	(
		{ before(grammarAccess.getSubAlgoritmoAccess().getComandosAssignment_1()); }
		(rule__SubAlgoritmo__ComandosAssignment_1)*
		{ after(grammarAccess.getSubAlgoritmoAccess().getComandosAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAlgoritmo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubAlgoritmo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAlgoritmo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAlgoritmoAccess().getFIMKeyword_2()); }
	'FIM'
	{ after(grammarAccess.getSubAlgoritmoAccess().getFIMKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Programa__DeclaracoesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramaAccess().getDeclaracoesDeclaracaoParserRuleCall_2_0()); }
		ruleDeclaracao
		{ after(grammarAccess.getProgramaAccess().getDeclaracoesDeclaracaoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programa__ComandosAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramaAccess().getComandosComandoParserRuleCall_5_0()); }
		ruleComando
		{ after(grammarAccess.getProgramaAccess().getComandosComandoParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaracaoAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDeclaracaoAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaracao__TipoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaracaoAccess().getTipoTipoVarParserRuleCall_2_0()); }
		ruleTipoVar
		{ after(grammarAccess.getDeclaracaoAccess().getTipoTipoVarParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressaoAritmetica__Termo1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressaoAritmeticaAccess().getTermo1TermoAritmeticoParserRuleCall_0_0()); }
		ruleTermoAritmetico
		{ after(grammarAccess.getExpressaoAritmeticaAccess().getTermo1TermoAritmeticoParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressaoAritmetica__OutrosTermosAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressaoAritmeticaAccess().getOutrosTermosOutroTermoAritmeticoParserRuleCall_1_0()); }
		ruleOutroTermoAritmetico
		{ after(grammarAccess.getExpressaoAritmeticaAccess().getOutrosTermosOutroTermoAritmeticoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroTermoAritmetico__OperadorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutroTermoAritmeticoAccess().getOperadorOpArit1ParserRuleCall_0_0()); }
		ruleOpArit1
		{ after(grammarAccess.getOutroTermoAritmeticoAccess().getOperadorOpArit1ParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroTermoAritmetico__TermoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutroTermoAritmeticoAccess().getTermoTermoAritmeticoParserRuleCall_1_0()); }
		ruleTermoAritmetico
		{ after(grammarAccess.getOutroTermoAritmeticoAccess().getTermoTermoAritmeticoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoAritmetico__Fator1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermoAritmeticoAccess().getFator1FatorAritmeticoParserRuleCall_0_0()); }
		ruleFatorAritmetico
		{ after(grammarAccess.getTermoAritmeticoAccess().getFator1FatorAritmeticoParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoAritmetico__OutrosFatoresAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermoAritmeticoAccess().getOutrosFatoresOutroFatorAritmeticoParserRuleCall_1_0()); }
		ruleOutroFatorAritmetico
		{ after(grammarAccess.getTermoAritmeticoAccess().getOutrosFatoresOutroFatorAritmeticoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroFatorAritmetico__OperadorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutroFatorAritmeticoAccess().getOperadorOpArit2ParserRuleCall_0_0()); }
		ruleOpArit2
		{ after(grammarAccess.getOutroFatorAritmeticoAccess().getOperadorOpArit2ParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroFatorAritmetico__FatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutroFatorAritmeticoAccess().getFatorFatorAritmeticoParserRuleCall_1_0()); }
		ruleFatorAritmetico
		{ after(grammarAccess.getOutroFatorAritmeticoAccess().getFatorFatorAritmeticoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FatorNumero__NumeroAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFatorNumeroAccess().getNumeroINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getFatorNumeroAccess().getNumeroINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FatorVariavel__VariavelAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFatorVariavelAccess().getVariavelDeclaracaoCrossReference_0()); }
		(
			{ before(grammarAccess.getFatorVariavelAccess().getVariavelDeclaracaoIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFatorVariavelAccess().getVariavelDeclaracaoIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getFatorVariavelAccess().getVariavelDeclaracaoCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FatorSubExpressao__ExpressaoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFatorSubExpressaoAccess().getExpressaoExpressaoAritmeticaParserRuleCall_1_0()); }
		ruleExpressaoAritmetica
		{ after(grammarAccess.getFatorSubExpressaoAccess().getExpressaoExpressaoAritmeticaParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressaoRelacional__Termo1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressaoRelacionalAccess().getTermo1TermoRelacionalParserRuleCall_0_0()); }
		ruleTermoRelacional
		{ after(grammarAccess.getExpressaoRelacionalAccess().getTermo1TermoRelacionalParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressaoRelacional__OutrosTermosAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressaoRelacionalAccess().getOutrosTermosOutroTermoRelacionalParserRuleCall_1_0()); }
		ruleOutroTermoRelacional
		{ after(grammarAccess.getExpressaoRelacionalAccess().getOutrosTermosOutroTermoRelacionalParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroTermoRelacional__OperadorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutroTermoRelacionalAccess().getOperadorOpBoolParserRuleCall_0_0()); }
		ruleOpBool
		{ after(grammarAccess.getOutroTermoRelacionalAccess().getOperadorOpBoolParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutroTermoRelacional__TermoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutroTermoRelacionalAccess().getTermoTermoRelacionalParserRuleCall_1_0()); }
		ruleTermoRelacional
		{ after(grammarAccess.getOutroTermoRelacionalAccess().getTermoTermoRelacionalParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoComparacaoRelacional__Exp1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermoComparacaoRelacionalAccess().getExp1ExpressaoAritmeticaParserRuleCall_0_0()); }
		ruleExpressaoAritmetica
		{ after(grammarAccess.getTermoComparacaoRelacionalAccess().getExp1ExpressaoAritmeticaParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoComparacaoRelacional__OpRelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermoComparacaoRelacionalAccess().getOpRelOpRelParserRuleCall_1_0()); }
		ruleOpRel
		{ after(grammarAccess.getTermoComparacaoRelacionalAccess().getOpRelOpRelParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoComparacaoRelacional__Exp2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermoComparacaoRelacionalAccess().getExp2ExpressaoAritmeticaParserRuleCall_2_0()); }
		ruleExpressaoAritmetica
		{ after(grammarAccess.getTermoComparacaoRelacionalAccess().getExp2ExpressaoAritmeticaParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermoSubExpressaoRelacional__ExpRelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermoSubExpressaoRelacionalAccess().getExpRelExpressaoRelacionalParserRuleCall_1_0()); }
		ruleExpressaoRelacional
		{ after(grammarAccess.getTermoSubExpressaoRelacionalAccess().getExpRelExpressaoRelacionalParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoAtribuicao__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoAtribuicaoAccess().getExpExpressaoAritmeticaParserRuleCall_1_0()); }
		ruleExpressaoAritmetica
		{ after(grammarAccess.getComandoAtribuicaoAccess().getExpExpressaoAritmeticaParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoAtribuicao__VariavelAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoAtribuicaoAccess().getVariavelDeclaracaoCrossReference_3_0()); }
		(
			{ before(grammarAccess.getComandoAtribuicaoAccess().getVariavelDeclaracaoIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getComandoAtribuicaoAccess().getVariavelDeclaracaoIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getComandoAtribuicaoAccess().getVariavelDeclaracaoCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoEntrada__VariavelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoEntradaAccess().getVariavelDeclaracaoCrossReference_1_0()); }
		(
			{ before(grammarAccess.getComandoEntradaAccess().getVariavelDeclaracaoIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getComandoEntradaAccess().getVariavelDeclaracaoIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getComandoEntradaAccess().getVariavelDeclaracaoCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoSaida__VariavelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoSaidaAccess().getVariavelDeclaracaoCrossReference_1_0()); }
		(
			{ before(grammarAccess.getComandoSaidaAccess().getVariavelDeclaracaoIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getComandoSaidaAccess().getVariavelDeclaracaoIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getComandoSaidaAccess().getVariavelDeclaracaoCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoCondicaoAccess().getExpExpressaoRelacionalParserRuleCall_1_0()); }
		ruleExpressaoRelacional
		{ after(grammarAccess.getComandoCondicaoAccess().getExpExpressaoRelacionalParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Cmd1Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoCondicaoAccess().getCmd1ComandoParserRuleCall_3_0()); }
		ruleComando
		{ after(grammarAccess.getComandoCondicaoAccess().getCmd1ComandoParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoCondicao__Cmd2Assignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoCondicaoAccess().getCmd2ComandoParserRuleCall_4_1_0()); }
		ruleComando
		{ after(grammarAccess.getComandoCondicaoAccess().getCmd2ComandoParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoRepeticao__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoRepeticaoAccess().getExpExpressaoRelacionalParserRuleCall_1_0()); }
		ruleExpressaoRelacional
		{ after(grammarAccess.getComandoRepeticaoAccess().getExpExpressaoRelacionalParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComandoRepeticao__CmdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComandoRepeticaoAccess().getCmdComandoParserRuleCall_2_0()); }
		ruleComando
		{ after(grammarAccess.getComandoRepeticaoAccess().getCmdComandoParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAlgoritmo__ComandosAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubAlgoritmoAccess().getComandosComandoParserRuleCall_1_0()); }
		ruleComando
		{ after(grammarAccess.getSubAlgoritmoAccess().getComandosComandoParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
