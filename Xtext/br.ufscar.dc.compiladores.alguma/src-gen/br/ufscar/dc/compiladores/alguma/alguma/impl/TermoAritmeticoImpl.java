/**
 * generated by Xtext 2.27.0.M2
 */
package br.ufscar.dc.compiladores.alguma.alguma.impl;

import br.ufscar.dc.compiladores.alguma.alguma.AlgumaPackage;
import br.ufscar.dc.compiladores.alguma.alguma.FatorAritmetico;
import br.ufscar.dc.compiladores.alguma.alguma.OutroFatorAritmetico;
import br.ufscar.dc.compiladores.alguma.alguma.TermoAritmetico;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Termo Aritmetico</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufscar.dc.compiladores.alguma.alguma.impl.TermoAritmeticoImpl#getFator1 <em>Fator1</em>}</li>
 *   <li>{@link br.ufscar.dc.compiladores.alguma.alguma.impl.TermoAritmeticoImpl#getOutrosFatores <em>Outros Fatores</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TermoAritmeticoImpl extends MinimalEObjectImpl.Container implements TermoAritmetico
{
  /**
   * The cached value of the '{@link #getFator1() <em>Fator1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFator1()
   * @generated
   * @ordered
   */
  protected FatorAritmetico fator1;

  /**
   * The cached value of the '{@link #getOutrosFatores() <em>Outros Fatores</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutrosFatores()
   * @generated
   * @ordered
   */
  protected EList<OutroFatorAritmetico> outrosFatores;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TermoAritmeticoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AlgumaPackage.Literals.TERMO_ARITMETICO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FatorAritmetico getFator1()
  {
    return fator1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFator1(FatorAritmetico newFator1, NotificationChain msgs)
  {
    FatorAritmetico oldFator1 = fator1;
    fator1 = newFator1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AlgumaPackage.TERMO_ARITMETICO__FATOR1, oldFator1, newFator1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFator1(FatorAritmetico newFator1)
  {
    if (newFator1 != fator1)
    {
      NotificationChain msgs = null;
      if (fator1 != null)
        msgs = ((InternalEObject)fator1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AlgumaPackage.TERMO_ARITMETICO__FATOR1, null, msgs);
      if (newFator1 != null)
        msgs = ((InternalEObject)newFator1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AlgumaPackage.TERMO_ARITMETICO__FATOR1, null, msgs);
      msgs = basicSetFator1(newFator1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlgumaPackage.TERMO_ARITMETICO__FATOR1, newFator1, newFator1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<OutroFatorAritmetico> getOutrosFatores()
  {
    if (outrosFatores == null)
    {
      outrosFatores = new EObjectContainmentEList<OutroFatorAritmetico>(OutroFatorAritmetico.class, this, AlgumaPackage.TERMO_ARITMETICO__OUTROS_FATORES);
    }
    return outrosFatores;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AlgumaPackage.TERMO_ARITMETICO__FATOR1:
        return basicSetFator1(null, msgs);
      case AlgumaPackage.TERMO_ARITMETICO__OUTROS_FATORES:
        return ((InternalEList<?>)getOutrosFatores()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AlgumaPackage.TERMO_ARITMETICO__FATOR1:
        return getFator1();
      case AlgumaPackage.TERMO_ARITMETICO__OUTROS_FATORES:
        return getOutrosFatores();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AlgumaPackage.TERMO_ARITMETICO__FATOR1:
        setFator1((FatorAritmetico)newValue);
        return;
      case AlgumaPackage.TERMO_ARITMETICO__OUTROS_FATORES:
        getOutrosFatores().clear();
        getOutrosFatores().addAll((Collection<? extends OutroFatorAritmetico>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AlgumaPackage.TERMO_ARITMETICO__FATOR1:
        setFator1((FatorAritmetico)null);
        return;
      case AlgumaPackage.TERMO_ARITMETICO__OUTROS_FATORES:
        getOutrosFatores().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AlgumaPackage.TERMO_ARITMETICO__FATOR1:
        return fator1 != null;
      case AlgumaPackage.TERMO_ARITMETICO__OUTROS_FATORES:
        return outrosFatores != null && !outrosFatores.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //TermoAritmeticoImpl
