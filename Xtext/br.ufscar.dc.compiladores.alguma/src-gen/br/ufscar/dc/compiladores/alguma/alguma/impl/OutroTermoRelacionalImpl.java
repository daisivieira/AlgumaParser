/**
 * generated by Xtext 2.27.0.M2
 */
package br.ufscar.dc.compiladores.alguma.alguma.impl;

import br.ufscar.dc.compiladores.alguma.alguma.AlgumaPackage;
import br.ufscar.dc.compiladores.alguma.alguma.OutroTermoRelacional;
import br.ufscar.dc.compiladores.alguma.alguma.TermoRelacional;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Outro Termo Relacional</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufscar.dc.compiladores.alguma.alguma.impl.OutroTermoRelacionalImpl#getOperador <em>Operador</em>}</li>
 *   <li>{@link br.ufscar.dc.compiladores.alguma.alguma.impl.OutroTermoRelacionalImpl#getTermo <em>Termo</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OutroTermoRelacionalImpl extends MinimalEObjectImpl.Container implements OutroTermoRelacional
{
  /**
   * The default value of the '{@link #getOperador() <em>Operador</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperador()
   * @generated
   * @ordered
   */
  protected static final String OPERADOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOperador() <em>Operador</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperador()
   * @generated
   * @ordered
   */
  protected String operador = OPERADOR_EDEFAULT;

  /**
   * The cached value of the '{@link #getTermo() <em>Termo</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTermo()
   * @generated
   * @ordered
   */
  protected TermoRelacional termo;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OutroTermoRelacionalImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AlgumaPackage.Literals.OUTRO_TERMO_RELACIONAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOperador()
  {
    return operador;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOperador(String newOperador)
  {
    String oldOperador = operador;
    operador = newOperador;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlgumaPackage.OUTRO_TERMO_RELACIONAL__OPERADOR, oldOperador, operador));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TermoRelacional getTermo()
  {
    return termo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTermo(TermoRelacional newTermo, NotificationChain msgs)
  {
    TermoRelacional oldTermo = termo;
    termo = newTermo;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AlgumaPackage.OUTRO_TERMO_RELACIONAL__TERMO, oldTermo, newTermo);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTermo(TermoRelacional newTermo)
  {
    if (newTermo != termo)
    {
      NotificationChain msgs = null;
      if (termo != null)
        msgs = ((InternalEObject)termo).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AlgumaPackage.OUTRO_TERMO_RELACIONAL__TERMO, null, msgs);
      if (newTermo != null)
        msgs = ((InternalEObject)newTermo).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AlgumaPackage.OUTRO_TERMO_RELACIONAL__TERMO, null, msgs);
      msgs = basicSetTermo(newTermo, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlgumaPackage.OUTRO_TERMO_RELACIONAL__TERMO, newTermo, newTermo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AlgumaPackage.OUTRO_TERMO_RELACIONAL__TERMO:
        return basicSetTermo(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AlgumaPackage.OUTRO_TERMO_RELACIONAL__OPERADOR:
        return getOperador();
      case AlgumaPackage.OUTRO_TERMO_RELACIONAL__TERMO:
        return getTermo();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AlgumaPackage.OUTRO_TERMO_RELACIONAL__OPERADOR:
        setOperador((String)newValue);
        return;
      case AlgumaPackage.OUTRO_TERMO_RELACIONAL__TERMO:
        setTermo((TermoRelacional)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AlgumaPackage.OUTRO_TERMO_RELACIONAL__OPERADOR:
        setOperador(OPERADOR_EDEFAULT);
        return;
      case AlgumaPackage.OUTRO_TERMO_RELACIONAL__TERMO:
        setTermo((TermoRelacional)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AlgumaPackage.OUTRO_TERMO_RELACIONAL__OPERADOR:
        return OPERADOR_EDEFAULT == null ? operador != null : !OPERADOR_EDEFAULT.equals(operador);
      case AlgumaPackage.OUTRO_TERMO_RELACIONAL__TERMO:
        return termo != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (operador: ");
    result.append(operador);
    result.append(')');
    return result.toString();
  }

} //OutroTermoRelacionalImpl
